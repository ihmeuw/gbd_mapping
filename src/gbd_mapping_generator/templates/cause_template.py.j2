"""Mapping templates for GBD causes.

This code is automatically generated by gbd_mapping_generator/cause_builder.py

Any manual changes will be lost.
"""
from __future__ import annotations

from .base_template import GbdRecord, ModelableEntity, Restrictions
from .etiology_template import Etiology
from .id import Unknown, {{ c_id_type|lower }}, {{ me_id_type|lower }}
from .sequela_template import Sequela


class Cause(ModelableEntity):
    """Container for cause GBD ids and metadata"""

    __slots__ = (
{% for attr_name, attr_type in cause_attrs %}
        "{{ attr_name }}",
{% endfor %}
    )

    def __init__(
        self,
{% for attr_name, attr_type in cause_attrs %}
{% if attr_name in ["parent", "sub_causes", "sequelae", "etiologies"] %}
        {{ attr_name }}: {{ attr_type }},
{% else %}
        {{ attr_name }}: {{ attr_type }},
{% endif %}
{% endfor %}
    ):
        super().__init__(name=name, kind=kind, gbd_id=gbd_id)
{% for attr_name, attr_type in cause_attrs %}
        self.{{ attr_name }} = {{ attr_name }}
{% endfor %}


class Causes(GbdRecord):
    """Container for GBD causes."""

    __slots__ = (
{% for cause_name in cause_names %}
        "{{ cause_name }}",
{% endfor %}
    )

    def __init__(self, **kwargs):
        super().__init__()
{% for cause_name in cause_names %}
        self.{{ cause_name }} = kwargs.get("{{ cause_name }}")
{% endfor %}
